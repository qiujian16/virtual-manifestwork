// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "open-cluster-management.io/api/work/v1alpha1"
)

// ReferenceWorkLister helps list ReferenceWorks.
// All objects returned here must be treated as read-only.
type ReferenceWorkLister interface {
	// List lists all ReferenceWorks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReferenceWork, err error)
	// ReferenceWorks returns an object that can list and get ReferenceWorks.
	ReferenceWorks(namespace string) ReferenceWorkNamespaceLister
	ReferenceWorkListerExpansion
}

// referenceWorkLister implements the ReferenceWorkLister interface.
type referenceWorkLister struct {
	indexer cache.Indexer
}

// NewReferenceWorkLister returns a new ReferenceWorkLister.
func NewReferenceWorkLister(indexer cache.Indexer) ReferenceWorkLister {
	return &referenceWorkLister{indexer: indexer}
}

// List lists all ReferenceWorks in the indexer.
func (s *referenceWorkLister) List(selector labels.Selector) (ret []*v1alpha1.ReferenceWork, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReferenceWork))
	})
	return ret, err
}

// ReferenceWorks returns an object that can list and get ReferenceWorks.
func (s *referenceWorkLister) ReferenceWorks(namespace string) ReferenceWorkNamespaceLister {
	return referenceWorkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ReferenceWorkNamespaceLister helps list and get ReferenceWorks.
// All objects returned here must be treated as read-only.
type ReferenceWorkNamespaceLister interface {
	// List lists all ReferenceWorks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ReferenceWork, err error)
	// Get retrieves the ReferenceWork from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ReferenceWork, error)
	ReferenceWorkNamespaceListerExpansion
}

// referenceWorkNamespaceLister implements the ReferenceWorkNamespaceLister
// interface.
type referenceWorkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ReferenceWorks in the indexer for a given namespace.
func (s referenceWorkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ReferenceWork, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ReferenceWork))
	})
	return ret, err
}

// Get retrieves the ReferenceWork from the indexer for a given namespace and name.
func (s referenceWorkNamespaceLister) Get(name string) (*v1alpha1.ReferenceWork, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("referencework"), name)
	}
	return obj.(*v1alpha1.ReferenceWork), nil
}
