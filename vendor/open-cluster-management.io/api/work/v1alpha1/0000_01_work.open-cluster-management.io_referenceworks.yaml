apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: referenceworks.work.open-cluster-management.io
spec:
  group: work.open-cluster-management.io
  names:
    kind: ReferenceWork
    listKind: ReferenceWorkList
    plural: referenceworks
    singular: referencework
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec reperesents the desired ManifestWork payload and Placement reference to be reconciled
              type: object
              properties:
                workReference:
                  description: ResourceIdentifier identifies a single resource included in this manifestwork
                  type: object
                  required:
                    - name
                    - resource
                  properties:
                    group:
                      description: Group is the API Group of the Kubernetes resource, empty string indicates it is in core group.
                      type: string
                    name:
                      description: Name is the name of the Kubernetes resource.
                      type: string
                    namespace:
                      description: Name is the namespace of the Kubernetes resource, empty string indicates it is a cluster scoped resource.
                      type: string
                    resource:
                      description: Resource is the resource name of the Kubernetes resource.
                      type: string
            status:
              description: Status represent the current status of Placing ManifestWork resources
              type: object
              properties:
                conditions:
                  description: 'Conditions contains the different condition statuses for this work. Valid condition types are: 1. Applied represents workload in ManifestWork is applied successfully on managed cluster. 2. Progressing represents workload in ManifestWork is being applied on managed cluster. 3. Available represents workload in ManifestWork exists on the managed cluster. 4. Degraded represents the current state of workload does not match the desired state for a certain period.'
                  type: array
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                referenceSpecHash:
                  type: string
                resourceStatus:
                  description: ResourceStatus represents the status of each resource in manifestwork deployed on a managed cluster. The Klusterlet agent on managed cluster syncs the condition from the managed cluster to the hub.
                  type: object
                  properties:
                    manifests:
                      description: 'Manifests represents the condition of manifests deployed on managed cluster. Valid condition types are: 1. Progressing represents the resource is being applied on managed cluster. 2. Applied represents the resource is applied successfully on managed cluster. 3. Available represents the resource exists on the managed cluster. 4. Degraded represents the current state of resource does not match the desired state for a certain period.'
                      type: array
                      items:
                        description: ManifestCondition represents the conditions of the resources deployed on a managed cluster.
                        type: object
                        properties:
                          conditions:
                            description: Conditions represents the conditions of this resource on a managed cluster.
                            type: array
                            items:
                              description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                              type: object
                              required:
                                - lastTransitionTime
                                - message
                                - reason
                                - status
                                - type
                              properties:
                                lastTransitionTime:
                                  description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                  type: string
                                  format: date-time
                                message:
                                  description: message is a human readable message indicating details about the transition. This may be an empty string.
                                  type: string
                                  maxLength: 32768
                                observedGeneration:
                                  description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                                  type: integer
                                  format: int64
                                  minimum: 0
                                reason:
                                  description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                                  type: string
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                status:
                                  description: status of the condition, one of True, False, Unknown.
                                  type: string
                                  enum:
                                    - "True"
                                    - "False"
                                    - Unknown
                                type:
                                  description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                  type: string
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          resourceMeta:
                            description: ResourceMeta represents the group, version, kind, name and namespace of a resoure.
                            type: object
                            properties:
                              group:
                                description: Group is the API Group of the Kubernetes resource.
                                type: string
                              kind:
                                description: Kind is the kind of the Kubernetes resource.
                                type: string
                              name:
                                description: Name is the name of the Kubernetes resource.
                                type: string
                              namespace:
                                description: Name is the namespace of the Kubernetes resource.
                                type: string
                              ordinal:
                                description: Ordinal represents the index of the manifest on spec.
                                type: integer
                                format: int32
                              resource:
                                description: Resource is the resource name of the Kubernetes resource.
                                type: string
                              version:
                                description: Version is the version of the Kubernetes resource.
                                type: string
                          statusFeedback:
                            description: StatusFeedback represents the values of the feild synced back defined in statusFeedbacks
                            type: object
                            properties:
                              values:
                                description: Values represents the synced value of the interested field.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - fieldValue
                                    - name
                                  properties:
                                    fieldValue:
                                      description: Value is the value of the status field. The value of the status field can only be integer, string or boolean.
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        boolean:
                                          description: Boolean is bool value when type is boolean.
                                          type: boolean
                                        integer:
                                          description: Integer is the integer value when type is integer.
                                          type: integer
                                          format: int64
                                        string:
                                          description: String is the string value when when type is string.
                                          type: string
                                        type:
                                          description: Type represents the type of the value, it can be integer, string or boolean.
                                          type: string
                                          enum:
                                            - Integer
                                            - String
                                            - Boolean
                                    name:
                                      description: Name represents the alias name for this field. It is the same as what is specified in StatuFeedbackRule in the spec.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
      served: true
      storage: true
      subresources:
        status: {}
